module(
    name = "array_record",
    version = "0.1.0",
)

bazel_dep(name = "abseil-cpp", version = "20240722.0", repo_name = "com_google_absl")
bazel_dep(name = "abseil-py", version = "2.1.0", repo_name = "com_google_absl_py")
bazel_dep(name = "brotli", version = "1.1.0")
bazel_dep(name = "googletest", version = "1.15.2", repo_name = "com_google_googletest")
bazel_dep(name = "eigen", version = "3.4.0.bcr.1", repo_name = "eigen")
bazel_dep(name = "protobuf", version = "28.2", repo_name = "com_google_protobuf")
bazel_dep(name = "riegeli", version = "0.0.0-20240606-973b6f0", repo_name = "com_google_riegeli")
bazel_dep(name = "highwayhash", version = "0.0.0-20240305-5ad3bf8")
bazel_dep(name = "rules_python", version = "0.36.0")
bazel_dep(name = "pybind11_bazel", version = "2.12.0")
bazel_dep(name = "platforms", version = "0.0.10")

SUPPORTED_PYTHON_VERSIONS = [
    "3.10",
]
DEFAULT_PYTHON_VERSION = SUPPORTED_PYTHON_VERSIONS[-1]
python = use_extension("@rules_python//python/extensions:python.bzl", "python")
[
    python.toolchain(
        python_version = version,
        is_default = version == DEFAULT_PYTHON_VERSION,
    )
    for version in SUPPORTED_PYTHON_VERSIONS
]

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pypi_array_record",
    python_version = "3.10",
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, "pypi_array_record")